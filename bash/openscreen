#!/bin/sh

SED_COLOURER () {
  . ${0%/*}/source-colours.sh
  echo "
  s/\t\([0-9]\+\)\.\([^ \t\n]\+\)\t/\t${F_BGREEN}\1${F_RESET}.${F_BCYAN}\2${F_RESET}\t/
  s/\t\(([0-9 :\/-]\+)\)\t/\t${F_BYELLOW}\1${F_RESET}\t/
  s/\t\((Detached)\)/\t${F_BRED}\1${F_RESET}/
  s/\t\((Attached)\)/\t${F_BGREEN}\1${F_RESET}/"
}

HELP_TEXT () {
  echo "$0 -h     Print this help"
  echo "$0 [-l]   List running screens"
  echo "$0 -p     List with colours (pretty)"
  echo "$0 NAME   Open a screen (^a d to detach from it)"
  echo "$0 -r user@host:port [-l | -p | NAME]  Open a remote screen through SSH"
}


if [ -n "$STY" ]; then
  # If $STY set, we're in a screen; print to stderr
  echo "WARNING: You are inside a screen" 1>&2
fi

if [ -z "$1" ] || [ "$1" = "-l" ]; then
  # List running screens
  screen -ls
elif [ "$1" = "-p" ]; then
  # Include colour variables
  . ${0%/*}/source-colours.sh
  screen -ls | sed "$(SED_COLOURER)"
  # GREEN id, BLUE name, YELLOW datetime, RED attached/GREEN detached
elif [ "$1" = "-r" ]; then
  if [ -z "$2" ]; then
    echo "No remote given!"
  else
    if [ -z "$3" ] || [ "$3" = "-l" ]; then
      ssh "$2" "screen -ls"
    elif [ "$3" = "-p" ]; then
      ssh "$2" "screen -ls" | sed "$(SED_COLOURER)"
    elif [ "$3" = "-h" ] || [ "$3" = "--help" ]; then
      HELP_TEXT
    elif [ "$3" = "-r" ]; then
      echo "Inception remoting not implemented"
    else
      ssh "$2" -tt "screen -d -r $3"
    fi
  fi
elif [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
  # Print the help text
  HELP_TEXT
else
  # Reattach a session; detach first if necessary
  screen -d -r $1
fi
